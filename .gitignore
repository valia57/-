import pygame
import os
import sys

all_sprites = pygame.sprite.Group()
FPS = 50
tiles_group = pygame.sprite.Group()
player_group = pygame.sprite.Group()
clock = pygame.time.Clock()

def terminate():
    pygame.quit()
    sys.exit()


def start_screen():
    pygame.init()
    size = width, height = 600, 600
    screen = pygame.display.set_mode(size)
    screen.fill((197, 187, 145))
    font = pygame.font.Font(None, 150)
    text = font.render("ТАНКИ", 1, (112, 83, 53))
    text_x = 100
    text_y = 100
    screen.blit(text, (text_x, text_y))

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                terminate()
            elif event.type == pygame.KEYDOWN or event.type == pygame.MOUSEBUTTONDOWN:
                return  # начинаем игру
        pygame.display.flip()
        clock.tick(FPS)

start_screen()
size = width, height = 600, 600
screen = pygame.display.set_mode(size)
screen.fill((0, 0, 0))

def load_level(filename):
    filename = 'map.txt'
    mapFile = open(filename, 'r')
    level_map = [line for line in mapFile]
    max_width = 16
    return list(map(lambda x: x.ljust(max_width, ' '), level_map))



def load_image(name, colorkey=None):
    image = pygame.image.load(name).convert()
    image = image.convert_alpha()
    return image

tile_images = {'кирпич': load_image('кирпич.png'), 'штаб': load_image('штаб.png')}
player_image = load_image('танк.png')
tile_width = tile_height = 50


class Tile(pygame.sprite.Sprite):
    def __init__(self, tile_type, pos_x, pos_y):
        super().__init__(tiles_group)
        self.image = tile_images[tile_type]
        list_of_tiles.append([pos_x, pos_y])
        self.rect = self.image.get_rect().move(tile_width * pos_x, tile_height * pos_y)


class Player(pygame.sprite.Sprite):
    def __init__(self, pos_x, pos_y, player_image):
        super().__init__(player_group)
        self.image = load_image(player_image)
        self.rect = self.image.get_rect().move(tile_width * pos_x, tile_height * pos_y)


# основной персонаж
player = None
# группы спрайтов


def generate_level(level):
    new_player, x1, y1 = None, None, None
    for y in range(len(level)):
        for x in range(len(level[y])):
            if level[y][x] == '.':
                Tile('кирпич', x, y)
            elif level[y][x] == '#':
                Tile('штаб', x, y)
            elif level[y][x] == '@':
                x1 = x
                y1 = x
                new_player = Player(x, y, 'танк.png')
    # вернем игрока, а также размер поля в клетках
    return new_player, x1, y1

list_of_tiles = []
player, level_x, level_y = generate_level(load_level('map.txt'))
level_x = 3
level_y = 11

screen_rect = (0, 0, width, height)



class Particle(pygame.sprite.Sprite):
    # сгенерируем частицы разного размера
    fire = [load_image("пуля.png")]
    for scale in (10,):
        fire.append(pygame.transform.scale(fire[0], (scale, scale)))

    def __init__(self, pos, dx, dy, why):
        super().__init__(all_sprites)
        self.image = self.fire[-1]
        self.rect = self.image.get_rect()
        self.why = why
        # у каждой частицы своя скорость — это вектор
        self.velocity = [dx, dy]
        # и свои координаты
        self.rect.x, self.rect.y = pos

    def update(self):
        global tiles_group, list_of_tiles
        # применяем гравитационный эффект:
        # движение с ускорением под действием гравитации
        self.velocity = [0, 0]
        if self.why == 4:
            self.velocity[0] = -1
        elif self.why == 1:
            self.velocity[1] = -1
        elif self.why == 2:
            self.velocity[0] = 1
        else:
            self.velocity[1] = 1
        # перемещаем частицу
        self.rect.x += self.velocity[0] * 50
        self.rect.y += self.velocity[1] * 50
        for i in range(len(list_of_tiles)):
            if self.rect.x // 50 * 50 == list_of_tiles[i][0] * 50 and self.rect.y // 50 * 50 == list_of_tiles[i][1] * 50:
                print(list_of_tiles[i], len(list_of_tiles))
                self.kill()
                #tiles_group.kill()
                tiles_group = pygame.sprite.Group()
                for j in range(len(list_of_tiles)):
                    if i != j:
                        if list_of_tiles[j] == [6, 11]:
                            Tile('штаб', list_of_tiles[j][0], list_of_tiles[j][1])
                        else:
                            Tile('кирпич', list_of_tiles[j][0], list_of_tiles[j][1])
                        #0
                    #else:
                        #list_of_tiles[j].f()
                del list_of_tiles[i]
                break

        # убиваем, если частица ушла за экран
        if not self.rect.colliderect(screen_rect):
            self.kill()
def create_particles(position, why):
    # количество создаваемых частиц
    # возможные скорости
    Particle(position, 1, 5, why)

clock = pygame.time.Clock()
where = 1
while True:
    level_y2 = level_y
    level_x2 = level_x
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            terminate()
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                if [level_x, max(0, level_y - 1)] not in list_of_tiles:
                    player_group = pygame.sprite.Group()
                    level_y = max(0, level_y - 1)
                    player = Player(level_x, level_y, 'танк.png')
                else:
                    player = Player(level_x, level_y, 'танк.png')
                where = 1
            elif event.key == pygame.K_DOWN:
                if [level_x, min(11, level_y + 1)] not in list_of_tiles:
                    player_group = pygame.sprite.Group()
                    level_y = min(11, level_y + 1)
                    player = Player(level_x, level_y, 'танк3.png')
                else:
                    player = Player(level_x, level_y, 'танк3.png')
                where = 3
            elif event.key == pygame.K_LEFT:
                if [max(0, level_x - 1), level_y] not in list_of_tiles:
                    player_group = pygame.sprite.Group()
                    level_x = max(0, level_x - 1)
                    player = Player(level_x, level_y, 'танк4.png')
                else:
                    player = Player(level_x, level_y, 'танк4.png')
                where = 4
            elif event.key == pygame.K_RIGHT:
                if [min(11, level_x + 1), level_y] not in list_of_tiles:
                    player_group = pygame.sprite.Group()
                    level_x = min(11, level_x + 1)
                    player = Player(level_x, level_y, 'танк2.png')
                else:
                    player = Player(level_x, level_y, 'танк2.png')
                where = 2
            elif event.key == pygame.K_SPACE:
                create_particles((level_x * 50 + 20, level_y * 50 + 20), where)

    screen.fill((0, 0, 0))
    tiles_group.draw(screen)
    all_sprites.update()
    all_sprites.draw(screen)
    # print(len(tiles_group))
    player_group.draw(screen)
    pygame.display.flip()
    clock.tick(FPS * 4)
pygame.quit()
